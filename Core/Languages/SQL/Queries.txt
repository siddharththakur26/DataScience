find the difference between the total number of CITY entries in the 
table and the number of distinct CITY entries in the table.
=> 
select  (count(CITY)- count(distinct CITY)) from STATION; 


Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. 
Your result cannot contain duplicates.

=>SELECT DISTINCT CITY 
FROM STATION 
WHERE 
(CITY NOT IN (SELECT DISTINCT CITY FROM STATION WHERE CITY LIKE '%a'
OR CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u'))
OR 
(CITY NOT IN (SELECT CITY FROM STATION WHERE CITY LIKE 'A%'
 OR CITY LIKE 'E%' OR CITY LIKE 'I%' OR CITY LIKE 'O%' OR CITY LIKE 'U%'));



=>
SELECT CEIL(AVG(SALARY) - AVG(REPLACE(SALARY, '0', '')))
FROM EMPLOYEES;


=>
SELECT (MONTHS*SALARY), COUNT(*) AS EARNING FROM EMPLOYEE GROUP BY MONTHS*SALARY ORDER BY (MONTHS*SALARY) DESC,MONTHS*SALARY LIMIT 1


=> Query the following two values from the STATION table:

The sum of all values in LAT_N rounded to a scale of  decimal places.
The sum of all values in LONG_W rounded to a scale of  decimal places.

SELECT ROUND(SUM(LAT_N), 2),
       ROUND(SUM(LONG_W), 2)
FROM STATION;

=> Query the sum of Northern Latitudes (LAT_N) from STATION having values greater 
than  and less than . Truncate your answer to  decimal places.

SELECT ROUND(SUM(LAT_N), 4)
FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345;


=> Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.825.
 Truncate your answer to  decimal places.

  
SELECT ROUND(LONG_W, 4)
FROM STATION
WHERE LAT_N =
    (SELECT MAX(LAT_N)
     FROM STATION
     WHERE LAT_N < 137.2345);

=> Query the smallest Northern Latitude (LAT_N) from STATION that is greater than .
 Round your answer to  decimal places.

SELECT *
FROM
  ( SELECT ROUND(LONG_W, 4)
   FROM STATION
   WHERE LAT_N > 38.7780
   ORDER BY LAT_N ASC)
WHERE ROWNUM = 1;

=> Query the Manhattan Distance between points  and  and round it to a scale of  decimal places.

SELECT ROUND(MAX(LAT_N) - MIN(LAT_N) + MAX(LONG_W) - MIN(LONG_W), 4)
FROM STATION;

Ecludian Distance

SELECT ROUND(SQRT(POWER(MIN(LAT_N) - MAX(LAT_N), 2) + POWER(MIN(LONG_W) - MAX(LONG_W), 2)), 4)
FROM STATION;


Median:
SELECT ROUND(MEDIAN(LAT_N), 4)
FROM STATION;


=>
Given the CITY and COUNTRY tables, query the sum of the populations of all cities where the CONTINENT is 'Asia'.

SELECT SUM(CITY.POPULATION)
FROM CITY
JOIN COUNTRY ON CITY.COUNTRYCODE = COUNTRY.CODE
WHERE COUNTRY.CONTINENT = 'Asia';


=>
Given the CITY and COUNTRY tables, query the names of all the continents (
COUNTRY.Continent) and their respective average city populations 
(CITY.Population) rounded down to the nearest integer.

SELECT COUNTRY.CONTINENT, FLOOR(AVG(CITY.POPULATION))
FROM CITY
JOIN COUNTRY ON CITY.COUNTRYCODE = COUNTRY.CODE
GROUP BY COUNTRY.CONTINENT;

